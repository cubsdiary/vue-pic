{"version":3,"sources":["webpack:///src/components/shopkeeper.vue","webpack:///./src/components/shopkeeper.vue?b471","webpack:///./src/components/shopkeeper.vue","webpack:///./node_modules/_exif-js@2.3.0@exif-js/exif.js"],"names":["shopkeeper","_this","this","_this2","name","phone","shopId","address","upLoadType","cardId","FormData","picValue","id","Orientation","FileReader","file","result","Image","data","shopImg","_this3","height","width","step","degree","length","ratio","count","nw","nh","canvas","initSize","ndata","components_shopkeeper","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","flexContainer","on","touchmove","$event","preventDefault","_m","_v","directives","rawName","value","expression","type","placeholder","domProps","input","target","composing","maxlength","for","_e","class","nobg","ref","staticStyle","display","accept","change","onChange","click","src","alt","cardImg","submit","_s","message","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","__WEBPACK_AMD_DEFINE_RESULT__","debug","EXIF","obj","EXIFwrapped","module","exports","ExifTags","Tags","36864","40960","40961","40962","40963","37121","37122","37500","37510","40964","36867","36868","37520","37521","37522","33434","33437","34850","34852","34855","34856","37377","37378","37379","37380","37381","37382","37383","37384","37385","37396","37386","41483","41484","41486","41487","41488","41492","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","40965","42016","TiffTags","256","257","34665","34853","258","259","262","274","277","284","530","531","282","283","296","273","278","279","513","514","301","318","319","529","532","306","270","271","272","305","315","33432","GPSTags","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","IFD1Tags","StringValues","ExposureProgram","MeteringMode","255","LightSource","Flash","31","32","65","69","71","73","77","79","89","93","95","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","imageHasData","img","getImageData","callback","handleBinaryFile","binFile","findEXIFinJPEG","exifdata","iptcdata","dataView","DataView","console","log","byteLength","getUint8","offset","isFieldSegmentStart","nameHeaderLength","startOffset","sectionLength","getUint16","readIPTCData","findIPTCinJPEG","isXmpEnabled","xmpdata","self","dom","DOMParser","getStringFromDB","xmpString","xmpEndIndex","indexOf","indexOfXmp","substring","slice","domDocument","parseFromString","xml2Object","findXMPinJPEG","call","test","base64","contentType","match","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","base64ToArrayBuffer","fileReader","onload","e","url","http","XMLHttpRequest","open","responseType","status","response","send","objectURLToBlob","blob","readAsArrayBuffer","Blob","File","marker","readEXIFData","IptcFieldMap","120","110","55","80","85","122","105","116","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","hasOwnProperty","Array","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","val","n","numerator","denominator","numValues","getUint32","valueOffset","Number","getInt32","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","firstIFDOffset","ExifIFDPointer","GPSInfoIFDPointer","IFD1OffsetPointer","getNextIFDOffset","thumbTags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","readThumbnailImage","xml2json","xml","json","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","child","old","children","idx","itemAtt","dataKey","dataValue","undefined","textContent","enableXmp","disableXmp","getData","HTMLImageElement","complete","getTag","getIptcTag","getAllTags","a","getAllIptcTags","pretty","strPretty","readFromBinaryFile","apply"],"mappings":"gIAmEAA,QAEA,+CAGA,SACA,UACA,QACA,SACA,WACA,WACA,SACA,gBACA,UACA,WACA,YACA,YAEA,oCAGA,IAAAC,EAAAC,uDAGA,GACA,mCAKA,IAAAC,EAAAD,kBACA,wDAEA,0BACA,uIAKA,0BACA,mIAUA,uBAEA,yBACA,mBAGAE,oBACAC,wBACAC,wBACAC,kBACAC,gCAEAC,uBAjBA,0BACA,iBAJA,0BACA,iBAPA,0BACA,2CA6BAC,sDAEA,iDAEA,qDAGAC,wCACAC,oCAIAV,KACAW,OAAA,gDAGA,6DAKA,WAEAC,2BAEAC,qCAGAC,aACAC,YACAD,iDAGAA,6BAEAA,8BAEAA,kBAEAJ,2CAGAC,mBAEAK,oBAEAA,6BAEAC,mBACAP,2BAMA,IAAAQ,EAAAlB,0GAKAU,2BAEAA,uDAWAS,WACAC,QACA,eANA,iBAWAC,EAVA,MADA,KAeAA,EAfA,MACA,sBAkBA,mBACA,aACAA,QACA,UACAD,WACAD,kBACA,GACA,WACA,UACAA,WACAC,WACAE,oBACAH,GACA,WACA,UACAC,WACAD,WACAG,qBACAH,GACA,WACA,UACAA,WACAC,WACAE,oBACA,0DAKA,yBACA,+BAEA,yBACA,cACAC,WACAH,UACAD,OAEAK,OAAA,6BAEA,2BACAA,MAEAA,KAEA,UAEAJ,WACAD,cAEA,gCACAA,YAEAM,OAAA,mBACA,aACA,0CACA,YAIAA,WACAC,WACAC,kFAGAA,2BACAA,4BAIAR,2BAIAR,QACA,0BAEAiB,GACA,WACA,2BAEAA,GACA,WACA,2BAEAA,4BAEAA,kCAKA,8BACAC,wBACAN,kDACA,uCACA,EACAO,yDAIApB,KC/TAqB,GADiBC,OAFjB,WAA0B,IAAAC,EAAAjC,KAAakC,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,aAAAC,OAAgCC,cAAA,IAAmBC,IAAKC,UAAA,SAAAC,GAA6BA,EAAAC,qBAA2BX,EAAAY,GAAA,GAAAZ,EAAAa,GAAA,KAAAV,EAAA,OAAkCE,YAAA,eAAyBF,EAAA,OAAYE,YAAA,SAAmBF,EAAA,OAAYE,YAAA,SAAmBF,EAAA,SAAcW,aAAa7C,KAAA,QAAA8C,QAAA,UAAAC,MAAAhB,EAAA,KAAAiB,WAAA,SAAkEX,OAASY,KAAA,OAAAjD,KAAA,OAAAQ,GAAA,OAAAuC,MAAA,GAAAG,YAAA,MAAsEC,UAAWJ,MAAAhB,EAAA,MAAmBQ,IAAKa,MAAA,SAAAX,GAAyBA,EAAAY,OAAAC,YAAsCvB,EAAA/B,KAAAyC,EAAAY,OAAAN,aAA+BhB,EAAAa,GAAA,KAAAV,EAAA,OAA0BE,YAAA,UAAoBF,EAAA,SAAcW,aAAa7C,KAAA,QAAA8C,QAAA,UAAAC,MAAAhB,EAAA,MAAAiB,WAAA,UAAoEX,OAASY,KAAA,OAAAjD,KAAA,QAAAQ,GAAA,QAAA+C,UAAA,KAAAR,MAAA,GAAAG,YAAA,QAA2FC,UAAWJ,MAAAhB,EAAA,OAAoBQ,IAAKa,MAAA,SAAAX,GAAyBA,EAAAY,OAAAC,YAAsCvB,EAAA9B,MAAAwC,EAAAY,OAAAN,eAAgChB,EAAAa,GAAA,KAAAV,EAAA,OAA4BE,YAAA,YAAsBF,EAAA,SAAcW,aAAa7C,KAAA,QAAA8C,QAAA,UAAAC,MAAAhB,EAAA,QAAAiB,WAAA,YAAwEX,OAASY,KAAA,OAAAjD,KAAA,UAAAQ,GAAA,UAAAuC,MAAA,GAAAG,YAAA,QAA8EC,UAAWJ,MAAAhB,EAAA,SAAsBQ,IAAKa,MAAA,SAAAX,GAAyBA,EAAAY,OAAAC,YAAsCvB,EAAA5B,QAAAsC,EAAAY,OAAAN,eAAkChB,EAAAa,GAAA,KAAAV,EAAA,OAA4BE,YAAA,SAAmBF,EAAA,MAAAH,EAAAa,GAAA,UAAAb,EAAAa,GAAA,KAAAV,EAAA,OAAkDE,YAAA,QAAkBL,EAAAY,GAAA,GAAAZ,EAAAa,GAAA,KAAAV,EAAA,OAAkCE,YAAA,UAAoB,KAAAL,EAAAhB,QAAAmB,EAAA,SAAmCE,YAAA,MAAAC,OAAyBmB,IAAA,UAAczB,EAAA0B,KAAA1B,EAAAa,GAAA,KAAAV,EAAA,SAAmCE,YAAA,aAAAsB,OAAgCC,KAAA,KAAA5B,EAAAhB,SAA2BsB,OAAQmB,IAAA,UAActB,EAAA,SAAc0B,IAAA,UAAAxB,YAAA,YAAAyB,aAAmDC,QAAA,QAAiBzB,OAAQY,KAAA,OAAAzC,GAAA,OAAAuD,OAAA,WAA6CxB,IAAKyB,OAAA,SAAAvB,GAA0BV,EAAAkC,SAAA,OAAkBlC,EAAAa,GAAA,UAAAb,EAAAhB,QAAAmB,EAAA,OAA6CE,YAAA,UAAAG,IAA0B2B,MAAA,SAAAzB,GAAyBA,EAAAC,qBAA2BR,EAAA,OAAYG,OAAO8B,IAAApC,EAAAhB,QAAAqD,IAAA,QAA4BrC,EAAA0B,aAAA1B,EAAAa,GAAA,WAAAb,EAAA3B,WAAA8B,EAAA,OAAoEE,YAAA,QAAkBF,EAAA,MAAAH,EAAAa,GAAA,WAAAb,EAAAa,GAAA,KAAAV,EAAA,OAAmDE,YAAA,QAAkBL,EAAAY,GAAA,GAAAZ,EAAAa,GAAA,KAAAV,EAAA,OAAkCE,YAAA,UAAoB,KAAAL,EAAAsC,QAAAnC,EAAA,SAAmCE,YAAA,MAAAC,OAAyBmB,IAAA,YAAgBzB,EAAA0B,KAAA1B,EAAAa,GAAA,KAAAV,EAAA,SAAmCE,YAAA,aAAAsB,OAAgCC,KAAA,KAAA5B,EAAAsC,SAA2BhC,OAAQmB,IAAA,YAAgBtB,EAAA,SAAc0B,IAAA,SAAAxB,YAAA,YAAAyB,aAAkDC,QAAA,QAAiBzB,OAAQY,KAAA,OAAAzC,GAAA,SAAAuD,OAAA,WAA+CxB,IAAKyB,OAAA,SAAAvB,GAA0BV,EAAAkC,SAAA,OAAkBlC,EAAAa,GAAA,UAAAb,EAAAsC,QAAAnC,EAAA,OAA6CE,YAAA,YAAsBF,EAAA,OAAYG,OAAO8B,IAAApC,EAAAsC,QAAAD,IAAA,QAA4BrC,EAAA0B,aAAA1B,EAAA0B,KAAA1B,EAAAa,GAAA,KAAAV,EAAA,OAAoDE,YAAA,QAAkBL,EAAAa,GAAA,KAAAV,EAAA,OAAwBE,YAAA,SAAAG,IAAyB2B,MAAAnC,EAAAuC,UAAoBvC,EAAAa,GAAA,KAAAV,EAAA,cAA+BG,OAAOrC,KAAA,UAAekC,EAAA,OAAYW,aAAa7C,KAAA,OAAA8C,QAAA,SAAAC,MAAAhB,EAAA,UAAAiB,WAAA,cAA0EZ,YAAA,YAAwBL,EAAAa,GAAA,WAAAb,EAAAwC,GAAAxC,EAAAyC,SAAA,mBAExhGC,iBADjB,WAAoC,IAAazC,EAAblC,KAAamC,eAA0BC,EAAvCpC,KAAuCqC,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,UAAoBF,EAAA,WAAe,WAAc,IAAaF,EAAblC,KAAamC,eAA0BC,EAAvCpC,KAAuCqC,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,SAAmBF,EAAA,QAAnGpC,KAAmG8C,GAAA,aAAgC,WAAc,IAAaZ,EAAblC,KAAamC,eAA0BC,EAAvCpC,KAAuCqC,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,SAAmBF,EAAA,QAAnGpC,KAAmG8C,GAAA,eCEzZ,IAcA8B,EAdAC,EAAA,OAcAC,CACAhF,EACAiC,GATA,EAVA,SAAAgD,GACAF,EAAA,SAaA,kBAEA,MAUAG,EAAA,QAAAJ,EAAA,mDC1BA,IAAAK,GAAA,WAEA,IAAAC,GAAA,EAIAC,EAAA,SAAAC,GACA,OAAAA,aAAAD,EAAAC,EACApF,gBAAAmF,OACAnF,KAAAqF,YAAAD,GADA,IAAAD,EAAAC,SAKA,IAAAE,KAAAC,UACAA,EAAAD,EAAAC,QAAAJ,GAEAI,EAAAJ,OAKA,IAAAK,EAAAL,EAAAM,MAGAC,MAAA,cACAC,MAAA,kBAGAC,MAAA,aAGAC,MAAA,kBACAC,MAAA,kBACAC,MAAA,0BACAC,MAAA,yBAGAC,MAAA,YACAC,MAAA,cAGAC,MAAA,mBAGAC,MAAA,mBACAC,MAAA,oBACAC,MAAA,aACAC,MAAA,qBACAC,MAAA,sBAGAC,MAAA,eACAC,MAAA,UACAC,MAAA,kBACAC,MAAA,sBACAC,MAAA,kBACAC,MAAA,OACAC,MAAA,oBACAC,MAAA,gBACAC,MAAA,kBACAC,MAAA,eACAC,MAAA,mBACAC,MAAA,kBACAC,MAAA,eACAC,MAAA,cACAC,MAAA,QACAC,MAAA,cACAC,MAAA,cACAC,MAAA,cACAC,MAAA,2BACAC,MAAA,wBACAC,MAAA,wBACAC,MAAA,2BACAC,MAAA,kBACAC,MAAA,gBACAC,MAAA,gBACAC,MAAA,aACAC,MAAA,YACAC,MAAA,aACAC,MAAA,iBACAC,MAAA,eACAC,MAAA,eACAC,MAAA,oBACAC,MAAA,wBACAC,MAAA,mBACAC,MAAA,cACAC,MAAA,WACAC,MAAA,aACAC,MAAA,YACAC,MAAA,2BACAC,MAAA,uBAGAC,MAAA,6BACAC,MAAA,iBAGAC,EAAAhE,EAAAgE,UACAC,IAAA,aACAC,IAAA,cACAC,MAAA,iBACAC,MAAA,oBACAN,MAAA,6BACAO,IAAA,gBACAC,IAAA,cACAC,IAAA,4BACAC,IAAA,cACAC,IAAA,kBACAC,IAAA,sBACAC,IAAA,mBACAC,IAAA,mBACAC,IAAA,cACAC,IAAA,cACAC,IAAA,iBACAC,IAAA,eACAC,IAAA,eACAC,IAAA,kBACAC,IAAA,wBACAC,IAAA,8BACAC,IAAA,mBACAC,IAAA,aACAC,IAAA,wBACAC,IAAA,oBACAC,IAAA,sBACAC,IAAA,WACAC,IAAA,mBACAC,IAAA,OACAC,IAAA,QACAC,IAAA,WACAC,IAAA,SACAC,MAAA,aAGAC,EAAAjG,EAAAiG,SACAC,EAAA,eACAC,EAAA,iBACAC,EAAA,cACAC,EAAA,kBACAC,EAAA,eACAC,EAAA,iBACAC,EAAA,cACAC,EAAA,eACAC,EAAA,gBACAC,EAAA,YACAC,GAAA,iBACAC,GAAA,SACAC,GAAA,cACAC,GAAA,WACAC,GAAA,cACAC,GAAA,WACAC,GAAA,qBACAC,GAAA,kBACAC,GAAA,cACAC,GAAA,qBACAC,GAAA,kBACAC,GAAA,sBACAC,GAAA,mBACAC,GAAA,oBACAC,GAAA,iBACAC,GAAA,qBACAC,GAAA,kBACAC,GAAA,sBACAC,GAAA,qBACAC,GAAA,eACAC,GAAA,mBAIAC,EAAAjI,EAAAiI,UACAhE,IAAA,aACAC,IAAA,cACAG,IAAA,gBACAC,IAAA,cACAC,IAAA,4BACAS,IAAA,eACAR,IAAA,cACAC,IAAA,kBACAQ,IAAA,eACAC,IAAA,kBACAL,IAAA,cACAC,IAAA,cACAJ,IAAA,sBACAK,IAAA,iBACAI,IAAA,eACAC,IAAA,kBACAI,IAAA,oBACAb,IAAA,mBACAC,IAAA,mBACAa,IAAA,uBAGAyC,EAAAlI,EAAAkI,cACAC,iBACAjC,EAAA,cACAC,EAAA,SACAC,EAAA,iBACAC,EAAA,oBACAC,EAAA,mBACAC,EAAA,mBACAC,EAAA,iBACAC,EAAA,gBACAC,EAAA,kBAEA0B,cACAlC,EAAA,UACAC,EAAA,UACAC,EAAA,wBACAC,EAAA,OACAC,EAAA,YACAC,EAAA,UACAC,EAAA,UACA6B,IAAA,SAEAC,aACApC,EAAA,UACAC,EAAA,WACAC,EAAA,cACAC,EAAA,gCACAC,EAAA,QACAK,EAAA,eACAC,GAAA,iBACAC,GAAA,QACAC,GAAA,wCACAC,GAAA,yCACAC,GAAA,0CACAC,GAAA,sCACAE,GAAA,mBACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,sBACAW,IAAA,SAEAE,OACArC,EAAA,qBACAC,EAAA,cACAI,EAAA,mCACAE,EAAA,+BACAE,EAAA,qCACAI,GAAA,gEACAE,GAAA,4DACAC,GAAA,4CACAQ,GAAA,gCACAC,GAAA,yBACAI,GAAA,oDACAS,GAAA,gDACAC,GAAA,oBACAC,GAAA,sCACAC,GAAA,iEACAC,GAAA,6DACAC,GAAA,6DACAC,GAAA,wFACAC,GAAA,oFACAC,GAAA,iDACAC,GAAA,4EACAC,GAAA,yEAEAC,eACAhD,EAAA,cACAC,EAAA,6BACAC,EAAA,6BACAC,EAAA,+BACAC,EAAA,+BACAE,EAAA,mBACAC,EAAA,kCAEA0C,kBACAlD,EAAA,WACAC,EAAA,YACAC,EAAA,WACAC,EAAA,eAEAgD,WACAlD,EAAA,yBAEAmD,gBACApD,EAAA,iBACAC,EAAA,kBAEAoD,cACArD,EAAA,qBACAC,EAAA,wBAEAqD,aACAtD,EAAA,OACAC,EAAA,cACAC,EAAA,eACAC,EAAA,gBACAC,EAAA,kBAEAmD,UACAvD,EAAA,SACAC,EAAA,OACAC,EAAA,QAEAsD,YACAxD,EAAA,SACAC,EAAA,iBACAC,EAAA,mBAEAuD,WACAzD,EAAA,SACAC,EAAA,OACAC,EAAA,QAEAwD,sBACA1D,EAAA,UACAC,EAAA,QACAC,EAAA,aACAC,EAAA,gBAEAwD,YACAxD,EAAA,OAGAyD,YACA5D,EAAA,GACAC,EAAA,IACAC,EAAA,KACAC,EAAA,KACAC,EAAA,IACAC,EAAA,IACAC,EAAA,MAYA,SAAAuD,EAAAC,GACA,QAAAA,EAAA,SA6BA,SAAAC,EAAAD,EAAAE,GACA,SAAAC,EAAAC,GACA,IAAAvO,EAAAwO,EAAAD,GACAJ,EAAAM,SAAAzO,MACA,IAAA0O,EAyFA,SAAA7O,GACA,IAAA8O,EAAA,IAAAC,SAAA/O,GAEAqE,GAAA2K,QAAAC,IAAA,sBAAAjP,EAAAkP,YACA,QAAAJ,EAAAK,SAAA,SAAAL,EAAAK,SAAA,GAEA,OADA9K,GAAA2K,QAAAC,IAAA,qBACA,EAGA,IAAAG,EAAA,EACA1O,EAAAV,EAAAkP,WAGAG,EAAA,SAAAP,EAAAM,GACA,OACA,KAAAN,EAAAK,SAAAC,IACA,KAAAN,EAAAK,SAAAC,EAAA,IACA,KAAAN,EAAAK,SAAAC,EAAA,IACA,KAAAN,EAAAK,SAAAC,EAAA,IACA,IAAAN,EAAAK,SAAAC,EAAA,IACA,IAAAN,EAAAK,SAAAC,EAAA,IAIA,KAAAA,EAAA1O,GAAA,CAEA,GAAA2O,EAAAP,EAAAM,GAAA,CAGA,IAAAE,EAAAR,EAAAK,SAAAC,EAAA,GACAE,EAAA,OAAAA,GAAA,GAEA,IAAAA,IAEAA,EAAA,GAGA,IAAAC,EAAAH,EAAA,EAAAE,EACAE,EAAAV,EAAAW,UAAAL,EAAA,EAAAE,GAEA,OAAAI,EAAA1P,EAAAuP,EAAAC,GAQAJ,KAzIAO,CAAAjB,GAEA,GADAJ,EAAAO,eACAvK,EAAAsL,aAAA,CACA,IAAAC,EAmdA,SAAA7P,GAEA,mBAAA8P,MAEA,OAEA,IAAAhB,EAAA,IAAAC,SAAA/O,GAEAqE,GAAA2K,QAAAC,IAAA,sBAAAjP,EAAAkP,YACA,QAAAJ,EAAAK,SAAA,SAAAL,EAAAK,SAAA,GAEA,OADA9K,GAAA2K,QAAAC,IAAA,qBACA,EAGA,IAAAG,EAAA,EACA1O,EAAAV,EAAAkP,WACAa,EAAA,IAAAC,UAEA,KAAAZ,EAAA1O,EAAA,IACA,WAAAuP,EAAAnB,EAAAM,EAAA,IACA,IAAAG,EAAAH,EAAA,EACAI,EAAAV,EAAAW,UAAAL,EAAA,KACAc,EAAAD,EAAAnB,EAAAS,EAAAC,GACAW,EAAAD,EAAAE,QAAA,cAGAC,GAFAH,IAAAI,UAAAJ,EAAAE,QAAA,cAAAD,IAEAC,QAAA,gBAGAF,IAAAK,MAAA,EAAAF,GACA,6nBAWAH,EAAAK,MAAAF,GAEA,IAAAG,EAAAT,EAAAU,gBAAAP,EAAA,YACA,OAAAQ,EAAAF,GAEApB,KAjgBAuB,CAAAjC,GACAJ,EAAAuB,cAEArB,GACAA,EAAAoC,KAAAtC,GAIA,GAAAA,EAAA9K,IACA,cAAAqN,KAAAvC,EAAA9K,KAEAiL,EA3CA,SAAAqC,EAAAC,GACAA,KAAAD,EAAAE,MAAA,8BAAoE,OACpEF,IAAAG,QAAA,8BAAkD,IAKlD,IAJA,IAAAC,EAAAC,KAAAL,GACAM,EAAAF,EAAAxQ,OACA2Q,EAAA,IAAAC,YAAAF,GACAG,EAAA,IAAAC,WAAAH,GACAI,EAAA,EAAuBA,EAAAL,EAASK,IAChCF,EAAAE,GAAAP,EAAAQ,WAAAD,GAEA,OAAAJ,EAgCAM,CAAArD,EAAA9K,WAGa,cAAAqN,KAAAvC,EAAA9K,KAAA,EACboO,EAAA,IAAA7R,YACA8R,OAAA,SAAAC,GACArD,EAAAqD,EAAApP,OAAAzC,SAnCA,SAAA8R,EAAAvD,GACA,IAAAwD,EAAA,IAAAC,eACAD,EAAAE,KAAA,MAAAH,GAAA,GACAC,EAAAG,aAAA,OACAH,EAAAH,OAAA,SAAAC,GACA,KAAA3S,KAAAiT,QAAA,IAAAjT,KAAAiT,QACA5D,EAAArP,KAAAkT,WAGAL,EAAAM,OA4BAC,CAAAjE,EAAA9K,IAAA,SAAAgP,GACAZ,EAAAa,kBAAAD,SAEa,CACb,IAAAR,EAAA,IAAAC,eACAD,EAAAH,OAAA,WACA,QAAA1S,KAAAiT,QAAA,IAAAjT,KAAAiT,OAGA,4BAFA3D,EAAAuD,EAAAK,UAIAL,EAAA,MAEAA,EAAAE,KAAA,MAAA5D,EAAA9K,KAAA,GACAwO,EAAAG,aAAA,cACAH,EAAAM,KAAA,WAES,GAAAxC,KAAA/P,aAAAuO,aAAAwB,KAAA4C,MAAApE,aAAAwB,KAAA6C,MAAA,CACT,IAAAf,KAAA,IAAA7R,YACA8R,OAAA,SAAAC,GACAzN,GAAA2K,QAAAC,IAAA,sBAAA6C,EAAApP,OAAAzC,OAAAiP,YACAT,EAAAqD,EAAApP,OAAAzC,SAGA2R,EAAAa,kBAAAnE,IAIA,SAAAK,EAAA3O,GACA,IAAA8O,EAAA,IAAAC,SAAA/O,GAGA,GADAqE,GAAA2K,QAAAC,IAAA,sBAAAjP,EAAAkP,YACA,KAAAJ,EAAAK,SAAA,SAAAL,EAAAK,SAAA,GAEA,OADA9K,GAAA2K,QAAAC,IAAA,qBACA,EAOA,IAJA,IAEA2D,EAFAxD,EAAA,EACA1O,EAAAV,EAAAkP,WAGAE,EAAA1O,GAAA,CACA,QAAAoO,EAAAK,SAAAC,GAEA,OADA/K,GAAA2K,QAAAC,IAAA,gCAAAG,EAAA,YAAAN,EAAAK,SAAAC,KACA,EASA,GANAwD,EAAA9D,EAAAK,SAAAC,EAAA,GACA/K,GAAA2K,QAAAC,IAAA2D,GAKA,KAAAA,EAGA,OAFAvO,GAAA2K,QAAAC,IAAA,uBAEA4D,EAAA/D,EAAAM,EAAA,EAAAN,EAAAW,UAAAL,EAAA,IAKAA,GAAA,EAAAN,EAAAW,UAAAL,EAAA,IA4DA,IAAA0D,GACAC,IAAA,UACAC,IAAA,SACA/G,GAAA,WACAgH,GAAA,cACAC,GAAA,SACAC,GAAA,cACAC,IAAA,gBACAC,IAAA,WACAC,IAAA,YACA/H,GAAA,YAEA,SAAAmE,EAAA1P,EAAAuP,EAAAC,GAKA,IAJA,IAEA+D,EAAAC,EAAAC,EAAAC,EAFA5E,EAAA,IAAAC,SAAA/O,GACAG,KAEAwT,EAAApE,EACAoE,EAAApE,EAAAC,GACA,KAAAV,EAAAK,SAAAwE,IAAA,IAAA7E,EAAAK,SAAAwE,EAAA,KACAD,EAAA5E,EAAAK,SAAAwE,EAAA,MACAb,KACAW,EAAA3E,EAAA8E,SAAAD,EAAA,IACA,EACAH,EAAAV,EAAAY,GACAH,EAAAtD,EAAAnB,EAAA6E,EAAA,EAAAF,GAEAtT,EAAA0T,eAAAL,GAEArT,EAAAqT,aAAAM,MACA3T,EAAAqT,GAAAO,KAAAR,GAGApT,EAAAqT,IAAArT,EAAAqT,GAAAD,GAIApT,EAAAqT,GAAAD,GAKAI,IAEA,OAAAxT,EAKA,SAAA6T,EAAAhU,EAAAiU,EAAAC,EAAAC,EAAAC,GACA,IAEAC,EAAAC,EACA7C,EAHA8C,EAAAvU,EAAAyP,UAAAyE,GAAAE,GACAI,KAIA,IAAA/C,EAAA,EAAiBA,EAAA8C,EAAU9C,IAC3B4C,EAAAH,EAAA,GAAAzC,EAAA,IACA6C,EAAAH,EAAAnU,EAAAyP,UAAA4E,GAAAD,MACA/P,GAAA2K,QAAAC,IAAA,gBAAAjP,EAAAyP,UAAA4E,GAAAD,IACAI,EAAAF,GAAAG,EAAAzU,EAAAqU,EAAAJ,EAAAC,EAAAE,GAEA,OAAAI,EAIA,SAAAC,EAAAzU,EAAAqU,EAAAJ,EAAAC,EAAAE,GACA,IAGAhF,EACAsF,EAAAC,EAAAC,EACAC,EAAAC,EALAxS,EAAAtC,EAAAyP,UAAA4E,EAAA,GAAAD,GACAW,EAAA/U,EAAAgV,UAAAX,EAAA,GAAAD,GACAa,EAAAjV,EAAAgV,UAAAX,EAAA,GAAAD,GAAAH,EAKA,OAAA3R,GACA,OACA,OACA,MAAAyS,EACA,OAAA/U,EAAAmP,SAAAkF,EAAA,GAAAD,GAIA,IAFAhF,EAAA2F,EAAA,EAAAE,EAAAZ,EAAA,EACAK,KACAE,EAAA,EAA6BA,EAAAG,EAAYH,IACzCF,EAAAE,GAAA5U,EAAAmP,SAAAC,EAAAwF,GAEA,OAAAF,EAGA,OAEA,OAAAzE,EAAAjQ,EADAoP,EAAA2F,EAAA,EAAAE,EAAAZ,EAAA,EACAU,EAAA,GAEA,OACA,MAAAA,EACA,OAAA/U,EAAAyP,UAAA4E,EAAA,GAAAD,GAIA,IAFAhF,EAAA2F,EAAA,EAAAE,EAAAZ,EAAA,EACAK,KACAE,EAAA,EAA6BA,EAAAG,EAAYH,IACzCF,EAAAE,GAAA5U,EAAAyP,UAAAL,EAAA,EAAAwF,GAAAR,GAEA,OAAAM,EAGA,OACA,MAAAK,EACA,OAAA/U,EAAAgV,UAAAX,EAAA,GAAAD,GAGA,IADAM,KACAE,EAAA,EAA6BA,EAAAG,EAAYH,IACzCF,EAAAE,GAAA5U,EAAAgV,UAAAC,EAAA,EAAAL,GAAAR,GAEA,OAAAM,EAGA,OACA,MAAAK,EAMA,OALAF,EAAA7U,EAAAgV,UAAAC,GAAAb,GACAU,EAAA9U,EAAAgV,UAAAC,EAAA,GAAAb,IACAO,EAAA,IAAAO,OAAAL,EAAAC,IACAD,YACAF,EAAAG,cACAH,EAGA,IADAD,KACAE,EAAA,EAA6BA,EAAAG,EAAYH,IACzCC,EAAA7U,EAAAgV,UAAAC,EAAA,EAAAL,GAAAR,GACAU,EAAA9U,EAAAgV,UAAAC,EAAA,IAAAL,GAAAR,GACAM,EAAAE,GAAA,IAAAM,OAAAL,EAAAC,GACAJ,EAAAE,GAAAC,YACAH,EAAAE,GAAAE,cAEA,OAAAJ,EAGA,OACA,MAAAK,EACA,OAAA/U,EAAAmV,SAAAd,EAAA,GAAAD,GAGA,IADAM,KACAE,EAAA,EAA6BA,EAAAG,EAAYH,IACzCF,EAAAE,GAAA5U,EAAAmV,SAAAF,EAAA,EAAAL,GAAAR,GAEA,OAAAM,EAGA,QACA,MAAAK,EACA,OAAA/U,EAAAmV,SAAAF,GAAAb,GAAApU,EAAAmV,SAAAF,EAAA,GAAAb,GAGA,IADAM,KACAE,EAAA,EAA6BA,EAAAG,EAAYH,IACzCF,EAAAE,GAAA5U,EAAAmV,SAAAF,EAAA,EAAAL,GAAAR,GAAApU,EAAAmV,SAAAF,EAAA,IAAAL,GAAAR,GAEA,OAAAM,GAyEA,SAAAzE,EAAAoB,EAAA+D,EAAA1U,GACA,IAAA2U,EAAA,GACA,IAAAT,EAAAQ,EAAuBR,EAAAQ,EAAA1U,EAAkBkU,IACzCS,GAAAC,OAAAC,aAAAlE,EAAAlC,SAAAyF,IAEA,OAAAS,EAGA,SAAAxC,EAAA7S,EAAAoV,GACA,WAAAnF,EAAAjQ,EAAAoV,EAAA,GAEA,OADA/Q,GAAA2K,QAAAC,IAAA,wBAAAgB,EAAAjQ,EAAAoV,EAAA,KACA,EAGA,IAAAhB,EACAI,EAAAF,EACAkB,EAAAC,EACAC,EAAAN,EAAA,EAGA,UAAApV,EAAAyP,UAAAiG,GACAtB,GAAA,MACS,WAAApU,EAAAyP,UAAAiG,GAIT,OADArR,GAAA2K,QAAAC,IAAA,+CACA,EAHAmF,GAAA,EAMA,OAAApU,EAAAyP,UAAAiG,EAAA,GAAAtB,GAEA,OADA/P,GAAA2K,QAAAC,IAAA,qCACA,EAGA,IAAA0G,EAAA3V,EAAAgV,UAAAU,EAAA,GAAAtB,GAEA,GAAAuB,EAAA,EAEA,OADAtR,GAAA2K,QAAAC,IAAA,kDAAAjP,EAAAgV,UAAAU,EAAA,GAAAtB,KACA,EAKA,IAFAI,EAAAR,EAAAhU,EAAA0V,IAAAC,EAAArN,EAAA8L,IAEAwB,eAEA,IAAAtB,KADAkB,EAAAxB,EAAAhU,EAAA0V,IAAAlB,EAAAoB,eAAAjR,EAAAyP,GACA,CACA,OAAAE,GACA,kBACA,YACA,mBACA,sBACA,oBACA,uBACA,gBACA,qBACA,mBACA,kBACA,eACA,iBACA,gBACA,2BACA,iBACAkB,EAAAlB,GAAA9H,EAAA8H,GAAAkB,EAAAlB,IACA,MAEA,kBACA,sBACAkB,EAAAlB,GAAAgB,OAAAC,aAAAC,EAAAlB,GAAA,GAAAkB,EAAAlB,GAAA,GAAAkB,EAAAlB,GAAA,GAAAkB,EAAAlB,GAAA,IACA,MAEA,8BACAkB,EAAAlB,GACA9H,EAAA4B,WAAAoH,EAAAlB,GAAA,IACA9H,EAAA4B,WAAAoH,EAAAlB,GAAA,IACA9H,EAAA4B,WAAAoH,EAAAlB,GAAA,IACA9H,EAAA4B,WAAAoH,EAAAlB,GAAA,IAGAE,EAAAF,GAAAkB,EAAAlB,GAIA,GAAAE,EAAAqB,kBAEA,IAAAvB,KADAmB,EAAAzB,EAAAhU,EAAA0V,IAAAlB,EAAAqB,kBAAAtL,EAAA6J,GACA,CACA,OAAAE,GACA,mBACAmB,EAAAnB,GAAAmB,EAAAnB,GAAA,GACA,IAAAmB,EAAAnB,GAAA,GACA,IAAAmB,EAAAnB,GAAA,GACA,IAAAmB,EAAAnB,GAAA,GAGAE,EAAAF,GAAAmB,EAAAnB,GAOA,OAFAE,EAAA,UAvJA,SAAA1F,EAAAmF,EAAA0B,EAAAvB,GAEA,IAAA0B,EAbA,SAAAhH,EAAAoF,EAAAE,GAEA,IAAAG,EAAAzF,EAAAW,UAAAyE,GAAAE,GAMA,OAAAtF,EAAAkG,UAAAd,EAAA,KAAAK,GAAAH,GAKA2B,CAAAjH,EAAAmF,EAAA0B,EAAAvB,GAEA,IAAA0B,EAEA,SAEA,GAAAA,EAAAhH,EAAAI,WAEA,SAIA,IAAA8G,EAAAhC,EAAAlF,EAAAmF,IAAA6B,EAAAvJ,EAAA6H,GAUA,GAAA4B,EAAA,YAGA,OAAAA,EAAA,aACA,OAEA,GAAAA,EAAAC,cAAAD,EAAAE,gBAAA,CAEA,IAAAC,EAAAlC,EAAA+B,EAAAC,aACAG,EAAAJ,EAAAE,gBACAF,EAAA,SAAAtD,MAAA,IAAAlB,WAAA1C,EAAAuC,OAAA8E,EAAAC,KACA9T,KAAA,eAGA,MAEA,OACA0M,QAAAC,IAAA,6DACA,MACA,QACAD,QAAAC,IAAA,sCAAA+G,EAAA,kBAGA,GAAAA,EAAA,2BACAhH,QAAAC,IAAA,4DAEA,OAAA+G,EAqGAK,CAAArW,EAAA0V,EAAAC,EAAAvB,GAEAI,EAsDA,SAAA8B,EAAAC,GACA,IAAAC,KAEA,MAAAD,EAAAE,UACA,GAAAF,EAAAG,WAAAhW,OAAA,GACA8V,EAAA,kBACA,QAAAG,EAAA,EAA2BA,EAAAJ,EAAAG,WAAAhW,OAA2BiW,IAAA,CACtD,IAAAC,EAAAL,EAAAG,WAAAG,KAAAF,GACAH,EAAA,eAAAI,EAAAE,UAAAF,EAAAG,iBAGS,MAAAR,EAAAE,SACT,OAAAF,EAAAQ,UAIA,GAAAR,EAAAS,gBACA,QAAAvF,EAAA,EAAwBA,EAAA8E,EAAAU,WAAAvW,OAA2B+Q,IAAA,CACnD,IAAAyF,EAAAX,EAAAU,WAAAJ,KAAApF,GACAqF,EAAAI,EAAAJ,SACA,SAAAN,EAAAM,GACAN,EAAAM,GAAAR,EAAAY,OACa,CACb,SAAAV,EAAAM,GAAA/C,KAAA,CACA,IAAAoD,EAAAX,EAAAM,GACAN,EAAAM,MACAN,EAAAM,GAAA/C,KAAAoD,GAEAX,EAAAM,GAAA/C,KAAAuC,EAAAY,KAKA,OAAAV,EAGA,SAAA9F,EAAA6F,GACA,IACA,IAAAhS,KACA,GAAAgS,EAAAa,SAAA1W,OAAA,EACA,QAAA+Q,EAAA,EAA6BA,EAAA8E,EAAAa,SAAA1W,OAAyB+Q,IAAA,CACtD,IAAAoF,EAAAN,EAAAa,SAAAP,KAAApF,GACAiF,EAAAG,EAAAH,WACA,QAAAW,KAAAX,EAAA,CACA,IAAAY,EAAAZ,EAAAW,GACAE,EAAAD,EAAAR,SACAU,EAAAF,EAAAP,eAEAU,IAAAF,IACAhT,EAAAgT,GAAAC,GAGA,IAAAV,EAAAD,EAAAC,SAEA,YAAAvS,EAAAuS,GACAvS,EAAAuS,GAAAR,EAAAO,OACiB,CACjB,YAAAtS,EAAAuS,GAAA,MACA,IAAAK,EAAA5S,EAAAuS,GAEAvS,EAAAuS,MACAvS,EAAAuS,GAAA/C,KAAAoD,GAEA5S,EAAAuS,GAAA/C,KAAAuC,EAAAO,UAIAtS,EAAAgS,EAAAmB,YAEA,OAAAnT,EACW,MAAAuN,GACX9C,QAAAC,IAAA6C,EAAAjO,UAIAS,EAAAqT,UAAA,WACArT,EAAAsL,cAAA,GAGAtL,EAAAsT,WAAA,WACAtT,EAAAsL,cAAA,GAGAtL,EAAAuT,QAAA,SAAAvJ,EAAAE,GACA,SAAAsB,KAAA5P,OAAAoO,aAAAwB,KAAA5P,OACA4P,KAAAgI,kBAAAxJ,aAAAwB,KAAAgI,oBACAxJ,EAAAyJ,YAGA1J,EAAAC,GAGAE,GACAA,EAAAoC,KAAAtC,GAHAC,EAAAD,EAAAE,IAMA,IAGAlK,EAAA0T,OAAA,SAAA1J,EAAAgG,GACA,GAAAjG,EAAAC,GACA,OAAAA,EAAAM,SAAA0F,IAGAhQ,EAAA2T,WAAA,SAAA3J,EAAAgG,GACA,GAAAjG,EAAAC,GACA,OAAAA,EAAAO,SAAAyF,IAGAhQ,EAAA4T,WAAA,SAAA5J,GACA,IAAAD,EAAAC,GAAA,SACA,IAAA6J,EACAhY,EAAAmO,EAAAM,SACA4F,KACA,IAAA2D,KAAAhY,EACAA,EAAA0T,eAAAsE,KACA3D,EAAA2D,GAAAhY,EAAAgY,IAGA,OAAA3D,GAGAlQ,EAAA8T,eAAA,SAAA9J,GACA,IAAAD,EAAAC,GAAA,SACA,IAAA6J,EACAhY,EAAAmO,EAAAO,SACA2F,KACA,IAAA2D,KAAAhY,EACAA,EAAA0T,eAAAsE,KACA3D,EAAA2D,GAAAhY,EAAAgY,IAGA,OAAA3D,GAGAlQ,EAAA+T,OAAA,SAAA/J,GACA,IAAAD,EAAAC,GAAA,SACA,IAAA6J,EACAhY,EAAAmO,EAAAM,SACA0J,EAAA,GACA,IAAAH,KAAAhY,EACAA,EAAA0T,eAAAsE,KACA,iBAAAhY,EAAAgY,GACAhY,EAAAgY,aAAAjD,OACAoD,GAAAH,EAAA,MAAAhY,EAAAgY,GAAA,KAAAhY,EAAAgY,GAAAtD,UAAA,IAAA1U,EAAAgY,GAAArD,YAAA,QAEAwD,GAAAH,EAAA,OAAAhY,EAAAgY,GAAAzX,OAAA,eAGA4X,GAAAH,EAAA,MAAAhY,EAAAgY,GAAA,QAIA,OAAAG,GAGAhU,EAAAiU,mBAAA,SAAAvY,GACA,OAAA2O,EAAA3O,SAMSyX,KAFTrT,EAAA,WACA,OAAAE,GACSkU,MAAA9T,SAAAD,EAAAC,QAAAN,KAERwM,KAAAzR","file":"static/js/0.5c8ed72e17f483ce4d80.js","sourcesContent":["<template>\r\n  <div class=\"shopkeeper\" flexContainer @touchmove.prevent>\r\n    <div class=\"title\">\r\n      <span></span>\r\n    </div>\r\n    <div class=\"input-info\">\r\n      <div class=\"info\">\r\n        <div class=\"name\">\r\n          <input type=\"text\" name=\"name\" id=\"name\" value=\"\" v-model=\"name\" placeholder=\"姓名\">\r\n        </div>\r\n        <div class=\"phone\">\r\n          <input type=\"text\" name=\"phone\" id=\"phone\" maxlength=\"11\" value=\"\" v-model=\"phone\"  placeholder=\"手机号码\">\r\n        </div>\r\n      </div>\r\n      <div class=\"address\">\r\n        <input type=\"text\" name=\"address\" id=\"address\" value=\"\" v-model=\"address\"  placeholder=\"店铺地址\">\r\n      </div>\r\n    </div>\r\n    <div class=\"shop\">\r\n      <h2>店铺图片</h2>\r\n      <div class=\"con\">\r\n        <div class=\"left\">\r\n          <span>示例图片</span>\r\n        </div>\r\n        <div class=\"right\">\r\n          <label for=\"shop\" class=\"btn\" v-if=\"shopImg !== ''\"></label>\r\n          <label for=\"shop\" class=\"defaultimg\" :class=\"{'nobg': shopImg !== ''}\">\r\n            <input type=\"file\" class=\"head_file\" id=\"shop\" ref=\"shopimg\" @change=\"onChange(0)\" style=\"display: none\" accept=\"image/*\">\r\n            <div class=\"shopimg\" v-if=\"shopImg !== ''\" @click.prevent>\r\n              <img :src=\"shopImg\" alt=\"\">\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"dsf\" v-if=\"upLoadType === '1'\">\r\n      <h2>营业执照 </h2>\r\n      <div class=\"con\">\r\n        <div class=\"left\">\r\n          <span>示例图片</span>\r\n        </div>\r\n        <div class=\"right\">\r\n          <label for=\"idcard\" class=\"btn\"  v-if=\"cardImg !== ''\"></label>\r\n          <label for=\"idcard\" class=\"defaultimg\" :class=\"{'nobg': cardImg !== ''}\">\r\n            <input type=\"file\" class=\"head_file\" id=\"idcard\" ref=\"idcard\" @change=\"onChange(1)\" style=\"display: none\" accept=\"image/*\">\r\n            <div class=\"shopimg\" v-if=\"cardImg !== ''\">\r\n              <img :src=\"cardImg\" alt=\"\">\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"box\">\r\n\r\n    </div>\r\n    <div class=\"submit\" @click=\"submit\">\r\n    </div>\r\n    <transition name=\"fade\">\r\n      <div class=\"message\" v-show=\"messState\">\r\n        {{message}}\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/ecmascript-6\">\r\nimport Exif from 'exif-js'\r\nexport default {\r\n  name: 'shopkeeper',\r\n  data () {\r\n    return {\r\n      upLoadType: 1,\r\n      shopId: '',\r\n      cardId: '',\r\n      name: '',\r\n      phone: '',\r\n      address: '',\r\n      message: '',\r\n      timer: null,\r\n      messState: false,\r\n      shopImg: '',\r\n      cardImg: '',\r\n      picValue: '',\r\n      formData: ''\r\n    }\r\n  },\r\n  watch: {\r\n    messState: function (newQuestion, oldQuestion) {\r\n      if (!oldQuestion) {\r\n        this.timer = setTimeout(() => {\r\n          this.messState = false\r\n        }, 2000)\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submit () {\r\n      this.message = ''\r\n      if (this.name.length < 2 || this.name.length > 6) {\r\n        this.message = '姓名格式不正确'\r\n        this.messState = true\r\n      } else if (!(/^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(17([0-1,3]|[6-8]))|(18[0-9]))\\d{8}$/.test(this.phone))) {\r\n        this.message = '手机格式不正确'\r\n        this.messState = true\r\n      } else if (this.address.length < 1) {\r\n        this.message = '请输入详细地址'\r\n        this.messState = true\r\n      } else if (!this.shopId) {\r\n        this.message = '请上传门店照片'\r\n        this.messState = true\r\n      } else if (!this.cardId && this.upLoadType === 1) {\r\n        this.message = '请上传营业执照'\r\n        this.messState = true\r\n      } else {\r\n        this.api_post('/api/wxPubilc/joinUS', (response) => {\r\n          if (response.errorCode === 0) {\r\n            this.$router.replace('/success')\r\n          } else {\r\n            this.message = '网络错误请重新提交'\r\n            this.messState = true\r\n          }\r\n        }, {\r\n          userName: this.name,\r\n          cellphone: this.phone,\r\n          shopPictures: this.shopId,\r\n          shopAddress: this.address,\r\n          type: this.upLoadType,\r\n          businessLicense: this.cardId\r\n        })\r\n      }\r\n    },\r\n    onChange (id) {\r\n      this.formData = new FormData()\r\n      if (id === 0) {\r\n        this.picValue = this.$refs.shopimg.files[0]\r\n      } else if (id === 1) {\r\n        this.picValue = this.$refs.idcard.files[0]\r\n      }\r\n      if (this.picValue) {\r\n        this.formData.append('img1', this.picValue)\r\n        this.imgPreview(this.picValue, id)\r\n      }\r\n    },\r\n    imgPreview (file, id) {\r\n      let self = this\r\n      let Orientation\r\n      // 去获取拍照时的信息，解决拍出来的照片旋转问题\r\n      Exif.getData(file, function () {\r\n        Orientation = Exif.getTag(this, 'Orientation')\r\n      })\r\n      // 看支持不支持FileReader\r\n      if (!file || !window.FileReader) return\r\n\r\n      if (/^image/.test(file.type)) {\r\n        // 创建一个reader\r\n        let reader = new FileReader()\r\n        // 将图片2将转成 base64 格式\r\n        reader.readAsDataURL(file)\r\n        // 读取成功后的回调\r\n        reader.onloadend = function () {\r\n          let result = this.result\r\n          let img = new Image()\r\n          img.src = result\r\n          // 判断图片是否大于100K,否就直接上传，反之压缩图片\r\n          if (this.result.length <= (100 * 1024)) {\r\n            console.log(id, this.result)\r\n            if (id === 0) {\r\n              self.shopImg = this.result\r\n            } else if (id === 1) {\r\n              self.cardImg = this.result\r\n            }\r\n            self.postImg(id)\r\n          } else {\r\n            img.onload = function () {\r\n              let data = self.compress(img, Orientation)\r\n              if (id === 0) {\r\n                self.shopImg = data\r\n              } else if (id === 1) {\r\n                self.cardImg = data\r\n              }\r\n              console.log(self.cardImg === self.shopImg)\r\n              self.postImg(id)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    postImg (id) {\r\n      // 这里写接口\r\n      this.api_file('/api/common/upload', this.formData, (response) => {\r\n        if (response.errorCode === 0) {\r\n          if (id === 0) {\r\n            this.shopId = response.data.id\r\n          } else if (id === 1) {\r\n            this.cardId = response.data.id\r\n          }\r\n        }\r\n      })\r\n    },\r\n    rotateImg (img, direction, canvas) {\r\n      // 最小与最大旋转方向，图片旋转4次后回到原方向\r\n      const minStep = 0\r\n      const maxStep = 3\r\n      if (img === null) return\r\n      // img的高度和宽度不能在img元素隐藏后获取，否则会出错\r\n      let height = img.height\r\n      let width = img.width\r\n      let step = 2\r\n      if (step === null) {\r\n        step = minStep\r\n      }\r\n      if (direction === 'right') {\r\n        step++\r\n        // 旋转到原位置，即超过最大值\r\n        step > maxStep && (step = minStep)\r\n      } else {\r\n        step--\r\n        step < minStep && (step = maxStep)\r\n      }\r\n      // 旋转角度以弧度值为参数\r\n      let degree = step * 90 * Math.PI / 180\r\n      let ctx = canvas.getContext('2d')\r\n      switch (step) {\r\n        case 0:\r\n          canvas.width = width\r\n          canvas.height = height\r\n          ctx.drawImage(img, 0, 0)\r\n          break\r\n        case 1:\r\n          canvas.width = height\r\n          canvas.height = width\r\n          ctx.rotate(degree)\r\n          ctx.drawImage(img, 0, -height)\r\n          break\r\n        case 2:\r\n          canvas.width = width\r\n          canvas.height = height\r\n          ctx.rotate(degree)\r\n          ctx.drawImage(img, -width, -height)\r\n          break\r\n        case 3:\r\n          canvas.width = height\r\n          canvas.height = width\r\n          ctx.rotate(degree)\r\n          ctx.drawImage(img, -width, 0)\r\n          break\r\n      }\r\n    },\r\n    compress (img, Orientation) {\r\n      let canvas = document.createElement('canvas')\r\n      let ctx = canvas.getContext('2d')\r\n      // 瓦片canvas\r\n      let tCanvas = document.createElement('canvas')\r\n      let tctx = tCanvas.getContext('2d')\r\n      let initSize = img.src.length\r\n      let width = img.width\r\n      let height = img.height\r\n      // 如果图片大于四百万像素，计算压缩比并将大小压至400万以下\r\n      let ratio\r\n      if ((ratio = width * height / 4000000) > 1) {\r\n        console.log('大于400万像素')\r\n        ratio = Math.sqrt(ratio)\r\n        width /= ratio\r\n        height /= ratio\r\n      } else {\r\n        ratio = 1\r\n      }\r\n      canvas.width = width\r\n      canvas.height = height\r\n      // 铺底色\r\n      ctx.fillStyle = '#fff'\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n      // 如果图片像素大于100万则使用瓦片绘制\r\n      let count\r\n      if ((count = width * height / 1000000) > 1) {\r\n        console.log('超过100W像素')\r\n        count = ~~(Math.sqrt(count) + 1)\r\n        // 计算要分成多少块瓦片\r\n        // 计算每块瓦片的宽和高\r\n        let nw = ~~(width / count)\r\n        let nh = ~~(height / count)\r\n        tCanvas.width = nw\r\n        tCanvas.height = nh\r\n        for (let i = 0; i < count; i++) {\r\n          for (let j = 0; j < count; j++) {\r\n            tctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, 0, 0, nw, nh)\r\n            ctx.drawImage(tCanvas, i * nw, j * nh, nw, nh)\r\n          }\r\n        }\r\n      } else {\r\n        ctx.drawImage(img, 0, 0, width, height)\r\n      }\r\n      // 修复ios上传图片的时候 被旋转的问题\r\n      if (Orientation !== '' && Orientation !== 1) {\r\n        switch (Orientation) {\r\n          case 6:\r\n            // 需要顺时针（向左）90度旋转\r\n            this.rotateImg(img, 'left', canvas)\r\n            break\r\n          case 8:\r\n            // 需要逆时针（向右）90度旋转\r\n            this.rotateImg(img, 'right', canvas)\r\n            break\r\n          case 3:\r\n            // 需要180度旋转\r\n            this.rotateImg(img, 'right', canvas)\r\n            // 转两次\r\n            this.rotateImg(img, 'right', canvas)\r\n            break\r\n        }\r\n      }\r\n      // 进行最小压缩\r\n      let ndata = canvas.toDataURL('image/jpeg', 0.1)\r\n      console.log('压缩前：' + initSize)\r\n      console.log('压缩后：' + ndata.length)\r\n      console.log('压缩率：' + ~~(100 * (initSize - ndata.length) / initSize) + '%')\r\n      tCanvas.width = tCanvas.height = canvas.width = canvas.height = 0\r\n      return ndata\r\n    }\r\n  },\r\n  mounted () {\r\n    this.upLoadType = this.$route.query.id\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped lang=\"stylus\" ref=\"stylesheet/stylus\">\r\n  @import \"../common/stylus/index.styl\"\r\n  .fade-enter-active, .fade-leave-active\r\n    transition: opacity .5s\r\n  .fade-enter, .fade-leave-to\r\n    opacity: 0\r\n  .shopkeeper\r\n    position: relative\r\n    min-height: 100vh\r\n    background-color: #ffffff\r\n    flex-direction: column\r\n    padding-top: 30px\r\n    .message\r\n      display: inline-block\r\n      position: absolute\r\n      left: 0\r\n      right: 0\r\n      top: 0\r\n      bottom: 0\r\n      margin: auto\r\n      width: 300px\r\n      height: 60px\r\n      text-align: center\r\n      line-height: 60px\r\n      border-radius: 5px\r\n      background-color: rgba(0,0,0,0.7)\r\n      font-size: 24px\r\n      color: #fff\r\n      z-index: 100\r\n    .title\r\n      height: 100px\r\n      padding: 0px 30px\r\n      margin-bottom: 24px\r\n      & > span\r\n        display: inline-block\r\n        width: 360px\r\n        height: 100px\r\n        bg-image('../common/imgs/biao')\r\n        background-size: 360px 46px\r\n        background-repeat: no-repeat\r\n        background-position: left center\r\n    .input-info\r\n      display: flex\r\n      flex-direction: column\r\n      height: 202px\r\n      border-bottom: 1px solid #b4b4b4\r\n      border-top: 1px solid #b4b4b4\r\n      .info\r\n        display: flex\r\n        height: 100px\r\n        border-bottom: 1px solid #b4b4b4\r\n        .name, .phone\r\n          flex: 1\r\n          display: flex\r\n          line-height: 100px\r\n          padding-left: 30px\r\n          overflow: hidden\r\n          color: #000\r\n          & > input\r\n            width: 100%\r\n            border: none\r\n            background: none\r\n            outline: none\r\n            font-size: 30px\r\n            color: #505050\r\n          & > input::-webkit-input-placeholder\r\n            color: #b4b4b4\r\n        .name\r\n          border-right: 1px solid #b4b4b4\r\n        .phone\r\n          flex: 1\r\n      .address\r\n        position: relative\r\n        flex: 1\r\n        display: flex\r\n        padding-left: 30px\r\n        line-height: 100px\r\n        overflow: hidden\r\n        & > input\r\n          flex: 1\r\n          border: none\r\n          background: none\r\n          outline: none\r\n          font-size: 30px\r\n          color: #505050\r\n        & > input::-webkit-input-placeholder\r\n          color: #b4b4b4\r\n    .shop, .dsf\r\n      height: 315px\r\n      display: flex\r\n      flex-direction: column\r\n      padding: 17px 30px 0px 30px\r\n      h2\r\n        font-size: 36px\r\n        color: #505050\r\n        font-weight: 600\r\n        line-height: 87px\r\n      .con\r\n        flex: 1\r\n        display: flex\r\n        .left\r\n          position: relative\r\n          width: 360px\r\n          span\r\n            position: absolute\r\n            bottom: 0\r\n            left: 0\r\n            display: inline-block\r\n            width: 330px\r\n            height: 40px\r\n            background-color: rgba(0, 0, 0, 0.3)\r\n            font-size: 22px\r\n            color: #fff\r\n            text-align: center\r\n            line-height: 40px\r\n        .right\r\n          flex: 1\r\n        .left, .right\r\n          .btn\r\n            position: absolute\r\n            right: 0px\r\n            top: -20px\r\n            z-index: 1000\r\n            display: inline-block\r\n            width: 82px\r\n            height: 50px\r\n            float: right\r\n            bg-image('../common/imgs/huan')\r\n            background-size: 82px 50px\r\n            background-repeat: no-repeat\r\n            background-position: center center\r\n    .shop\r\n      .left\r\n        bg-image('../common/imgs/md')\r\n        background-size: 330px 214px\r\n        background-repeat: no-repeat\r\n        background-position: left top\r\n      .right\r\n        position: relative\r\n        display: flex\r\n        .defaultimg\r\n          flex: 1\r\n          bg-image('../common/imgs/dp')\r\n          background-size: 330px 214px\r\n          background-repeat: no-repeat\r\n          background-position: left top\r\n          &.nobg\r\n            background: none\r\n        .shopimg\r\n          position: absolute\r\n          left: 0\r\n          top: 0\r\n          width: 100%\r\n          height: 214px\r\n          z-index: 0\r\n          img\r\n            display: block\r\n            width: 100%\r\n            height: 100%\r\n            object-fit: cover\r\n    .dsf\r\n      .left\r\n        bg-image('../common/imgs/card')\r\n        background-size: 330px 214px\r\n        background-repeat: no-repeat\r\n        background-position: left top\r\n      .right\r\n        position: relative\r\n        display: flex\r\n        .defaultimg\r\n          flex: 1\r\n          bg-image('../common/imgs/yy')\r\n          background-size: 330px 214px\r\n          background-repeat: no-repeat\r\n          background-position: left top\r\n          &.nobg\r\n            background: none\r\n        .shopimg\r\n          position: absolute\r\n          left: 0\r\n          top: 0\r\n          width: 100%\r\n          height: 214px\r\n          z-index: 0\r\n          img\r\n            display: block\r\n            width: 100%\r\n            height: 100%\r\n            object-fit: cover\r\n    .box\r\n      flex: 1\r\n    .submit\r\n      height: 100px\r\n      bg-image('../common/imgs/submit')\r\n      background-size: 750px 100px\r\n      background-repeat: no-repeat\r\n      background-position: center center\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/shopkeeper.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"shopkeeper\",attrs:{\"flexContainer\":\"\"},on:{\"touchmove\":function($event){$event.preventDefault();}}},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"input-info\"},[_c('div',{staticClass:\"info\"},[_c('div',{staticClass:\"name\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.name),expression:\"name\"}],attrs:{\"type\":\"text\",\"name\":\"name\",\"id\":\"name\",\"value\":\"\",\"placeholder\":\"姓名\"},domProps:{\"value\":(_vm.name)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.name=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"phone\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.phone),expression:\"phone\"}],attrs:{\"type\":\"text\",\"name\":\"phone\",\"id\":\"phone\",\"maxlength\":\"11\",\"value\":\"\",\"placeholder\":\"手机号码\"},domProps:{\"value\":(_vm.phone)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.phone=$event.target.value}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"address\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.address),expression:\"address\"}],attrs:{\"type\":\"text\",\"name\":\"address\",\"id\":\"address\",\"value\":\"\",\"placeholder\":\"店铺地址\"},domProps:{\"value\":(_vm.address)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.address=$event.target.value}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"shop\"},[_c('h2',[_vm._v(\"店铺图片\")]),_vm._v(\" \"),_c('div',{staticClass:\"con\"},[_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"right\"},[(_vm.shopImg !== '')?_c('label',{staticClass:\"btn\",attrs:{\"for\":\"shop\"}}):_vm._e(),_vm._v(\" \"),_c('label',{staticClass:\"defaultimg\",class:{'nobg': _vm.shopImg !== ''},attrs:{\"for\":\"shop\"}},[_c('input',{ref:\"shopimg\",staticClass:\"head_file\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"id\":\"shop\",\"accept\":\"image/*\"},on:{\"change\":function($event){_vm.onChange(0)}}}),_vm._v(\" \"),(_vm.shopImg !== '')?_c('div',{staticClass:\"shopimg\",on:{\"click\":function($event){$event.preventDefault();}}},[_c('img',{attrs:{\"src\":_vm.shopImg,\"alt\":\"\"}})]):_vm._e()])])])]),_vm._v(\" \"),(_vm.upLoadType === '1')?_c('div',{staticClass:\"dsf\"},[_c('h2',[_vm._v(\"营业执照 \")]),_vm._v(\" \"),_c('div',{staticClass:\"con\"},[_vm._m(2),_vm._v(\" \"),_c('div',{staticClass:\"right\"},[(_vm.cardImg !== '')?_c('label',{staticClass:\"btn\",attrs:{\"for\":\"idcard\"}}):_vm._e(),_vm._v(\" \"),_c('label',{staticClass:\"defaultimg\",class:{'nobg': _vm.cardImg !== ''},attrs:{\"for\":\"idcard\"}},[_c('input',{ref:\"idcard\",staticClass:\"head_file\",staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"id\":\"idcard\",\"accept\":\"image/*\"},on:{\"change\":function($event){_vm.onChange(1)}}}),_vm._v(\" \"),(_vm.cardImg !== '')?_c('div',{staticClass:\"shopimg\"},[_c('img',{attrs:{\"src\":_vm.cardImg,\"alt\":\"\"}})]):_vm._e()])])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"box\"}),_vm._v(\" \"),_c('div',{staticClass:\"submit\",on:{\"click\":_vm.submit}}),_vm._v(\" \"),_c('transition',{attrs:{\"name\":\"fade\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.messState),expression:\"messState\"}],staticClass:\"message\"},[_vm._v(\"\\n      \"+_vm._s(_vm.message)+\"\\n    \")])])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"title\"},[_c('span')])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"left\"},[_c('span',[_vm._v(\"示例图片\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"left\"},[_c('span',[_vm._v(\"示例图片\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler?{\"id\":\"data-v-11edff72\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=template&index=0!./src/components/shopkeeper.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-11edff72\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=styles&index=0!./shopkeeper.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.1@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./shopkeeper.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./shopkeeper.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-11edff72\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=template&index=0!./shopkeeper.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-11edff72\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/shopkeeper.vue\n// module id = null\n// module chunks = ","(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_exif-js@2.3.0@exif-js/exif.js\n// module id = vvLd\n// module chunks = 0"],"sourceRoot":""}